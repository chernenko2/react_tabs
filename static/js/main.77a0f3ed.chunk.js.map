{"version":3,"sources":["helpers/getTabById.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getTabById","tabs","tabId","find","tab","id","Tabs","onTabSelected","selectedTabId","selectedTab","className","map","classNames","href","onClick","handleTab","title","content","App","useState","setSelectedTabId","getTabTitle","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAa,SAACC,EAAaC,GAGtC,OAFoBD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAE1BD,EAAK,I,OCUhBK,EAA4B,SAAC,GAInC,IAHLL,EAGI,EAHJA,KACAM,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcT,EAAWC,EAAMO,GAQrC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACP,GAAD,OACR,oBAEE,UAAQ,MACRM,UAAWE,IAAW,CACpB,YAAaR,EAAIC,KAAOI,EAAYJ,KAJxC,SAOE,mBACEQ,KAAI,WAAMT,EAAIC,IACd,UAAQ,UACRS,QAAS,kBArBL,SAACV,GACbA,EAAIC,KAAOG,GACbD,EAAcH,GAmBWW,CAAUX,IAH3B,SAKGA,EAAIY,SAXFZ,EAAIC,WAkBjB,qBACEK,UAAU,QACV,UAAQ,aAFV,SAIGD,EAAYQ,cChDRhB,EAAc,CACzB,CAAEI,GAAI,QAASW,MAAO,QAASC,QAAS,eACxC,CAAEZ,GAAI,QAASW,MAAO,QAASC,QAAS,eACxC,CAAEZ,GAAI,QAASW,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASlB,EAAK,GAAGI,IAA3D,mBAAOG,EAAP,KAAsBY,EAAtB,KAcA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAVgB,WAClB,IAAMD,EAAcT,EAAWC,EAAMO,GAErC,OAAOC,EACHA,EAAYO,MACZf,EAAK,GAAGe,MAMYK,MAGtB,cAAC,EAAD,CACEpB,KAAMA,EACNM,cApBgB,SAACH,GACrBgB,EAAiBhB,EAAIC,KAoBjBG,cAAeA,QCnCvBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.77a0f3ed.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\nexport const getTabById = (tabs: Tab[], tabId: string) => {\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return selectedTab || tabs[0];\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\nimport { getTabById } from '../../helpers/getTabById';\n\ntype TabsProps = {\n  tabs: {\n    id: string;\n    title: string;\n    content: string;\n  } [];\n  onTabSelected: (tab: Tab) => void;\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const selectedTab = getTabById(tabs, selectedTabId);\n\n  const handleTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': tab.id === selectedTab.id,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport { getTabById } from './helpers/getTabById';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const getTabTitle = () => {\n    const selectedTab = getTabById(tabs, selectedTabId);\n\n    return selectedTab\n      ? selectedTab.title\n      : tabs[0].title;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getTabTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}